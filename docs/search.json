[{"path":"https://dbca-wa.github.io/rivRmon/articles/annual_reports.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"How to make plots and tables for annual reports","text":"water quality data, historical present, accessed Water Information Reporting portal maintained Department Water Environment link. Data downloaded Canning Estuary Swan Estuary sites using keywords search terms “SG-E-CANEST” “SG-E-SWANEST” respectively. Data requested “Water Quality (discrete) Site(s) cross-tabulated” data size large, requests split appropriate yearly chunks. data starting point using functions follow produce plots tables annual reports. suggested original downloads kept data simply updated yearly. plots created functions output panel plots follow format previous annual reports. panel based variable contains separate plot combination ecological management zone (emz) sampling method. Visualisation consists : “ribbon” designating 10th 90th percentiles background data line showing background data median points showing current reporting period medians tables generated functions contain counts, minimums, maximums medians current reporting period per month. summarised emz sampling method can copied straight report compiled. process creating plots tables two stages.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/articles/annual_reports.html","id":"stage-one---data-assembly","dir":"Articles","previous_headings":"","what":"Stage One - Data assembly","title":"How to make plots and tables for annual reports","text":"Data required annual reports consists current reporting period (01 June 31 May) background period (5 years prior current reporting period). stage downloaded data read categorised current background period. downloaded data challenging formatting (automatic reading variable naming etc) functions specific current export format. format change functions fail require editing. report read tidied following occuring: variable names standardised value following “<” halved value following “>” left variable emz created based site data read tidied exported csv format “XX-X-XXXXX_annual_report_data_for_YYY.csv” : “XX-X-XXXXX” estuary (.e. SG-E-CANEST SG-E-SWANEST) “YYYY” current reporting year. Remember change file path slashes Windows OS. Examples . inpath character file path downloaded data xlsx files reportingYear 4 digit numerical representing current reporting year outpath character file path desired export location writing csv files function needs run year set data annual report. output stage input next two stages.","code":"#load the package library(rivRmon)  #Canning estuary - forward slash example canning_WIN_report_data(inpath = \"C:blah/blah/annual_data_location\",                          reportingYear = 2019,                          outpath = \"C:blah/blah/somewhere\")  #Swan estuary - backslash example swan_WIN_report_data(inpath = \"C:blah\\\\blah\\\\annual_data_location\",                       reportingYear = 2019,                       outpath = \"C:blah\\\\blah\\\\somewhere\")"},{"path":"https://dbca-wa.github.io/rivRmon/articles/annual_reports.html","id":"stage-two---creating-plots-and-tables","dir":"Articles","previous_headings":"","what":"Stage Two - Creating plots and tables","title":"How to make plots and tables for annual reports","text":"separate function estuary. essentially wrapper functions around functions work data requirements visualisation (mainly formatting plots per panel, data filtering parameters etc). Outputs saved directories created running functions. panels tables directory prefix “c_” “s_” Canning Swan estuaries respectively. inpath character file path pre-made annual report data (path Stage 1 ) outpath character file path desired export location parameters surface, bottom chloro can take named colour hex colour code. defaults produce colours similar produced prior reports, however access parameters allows users tweak required. surface relates surface measurements, bottom bottom measurements chloro integrated measurements specific chlorophyll plots.","code":"#Canning estuary - forward slash example canning_reportR(inpath = \"C:blah/blah/somewhere\",                  outpath = \"C:blah/blah/somewhere_else\",                  surface = \"blue\",                  bottom = \"red\",                 chloro = \"darkgreen\")  #Swan estuary - backslash example swan_reportR(inpath = \"C:blah\\\\blah\\\\somewhere\",                  outpath = \"C:blah\\\\blah\\\\somewhere_else\",                  surface = \"blue\",                  bottom = \"red\",                 chloro = \"darkgreen\")"},{"path":"https://dbca-wa.github.io/rivRmon/articles/annual_reports.html","id":"examples","dir":"Articles","previous_headings":"Stage Two - Creating plots and tables","what":"Examples","title":"How to make plots and tables for annual reports","text":"Canning estuary total oxidised nitrogen.  Swan estuary chlorophyll .  Chlorophyll csv table","code":""},{"path":"https://dbca-wa.github.io/rivRmon/articles/annual_reports.html","id":"groupings-of-variables","dir":"Articles","previous_headings":"","what":"Groupings of variables","title":"How to make plots and tables for annual reports","text":"stated previously variables grouped code can filter data similar circumstances. groupings follows. Canning estuary: chlorophyll - dissolved organic carbon - total nitrogen ammonia nitrogen total oxidised nitrogen dissolved organic nitrogen total phosphorus filterable reactive phosphorus dissolved oxygen pH salinity temperature secchi depth - silica - Swan estuary: chlorophyll - total nitrogen ammonia nitrogen total oxidised nitrogen dissolved organic nitrogen total phosphorus filterable reactive phosphorus silica alkalinity (report variable Canning estuary) dissolved organic carbon tss (report variable Canning estuary) dissolved oxygen pH salinity temperature secchi depth Note swan_reportR outputs 2 panel plots per original report group 3 variables. extra panel plots additional emz “Swan”.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/articles/annual_reports.html","id":"plotting-individual-variable-groupings","dir":"Articles","previous_headings":"","what":"Plotting individual variable groupings","title":"How to make plots and tables for annual reports","text":"previously mentioned, reportR functions wrappers. individual functions available user can found reference index. groupings match function names take format ann_rep_vvvv_e() : “vvvv” variable grouping “_e” estuary (“_c” “_s”) functions written internal wrapper need run following manner order read correct data.","code":"#load additional packages library(tidyverse)  #setup a file path to the annual report data (i.e. csv from Stage One) inpath <- \"C:path/to/anuual_report_data\"  #get the full name and pathrow to the required data - change pattern as required file <- list.files(path = inpath, pattern = \"SG-E-CANEST_annual_report\",                     full.names = TRUE)  #create parameter variables for the function you want to use outpath <- \"C:path/to/desired_export_location\" data <- readr::read_csv(file = file, guess_max = 10000)  #run function - here we have chosen group 1 variables for the Swan ann_rep_grp1_s(outpath, data, surface = \"blue\", bottom = \"red\")"},{"path":"https://dbca-wa.github.io/rivRmon/articles/DeveloperNotes.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Developer Notes","text":"rivRmon package developed back 2019 fill need Department’s reporting Swan Canning Rivers. initial brief create product look feel reporting undertaken using proprietary software. initial development, functionality (e.g. phytoplankton reporting) added tweaks original surfer plots accommodate extra sites, deeper profiles, better interpolation etc. lot projects like , time always limiting factor package, whilst still robust time writing, benefit refactoring removal older package dependencies. intention notes aid future developer navigating package structure hopefully give context around decisions made formulating code base.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/articles/DeveloperNotes.html","id":"package-structure","dir":"Articles","previous_headings":"","what":"Package structure","title":"Developer Notes","text":"basic package structure look familiar anyone experience writing R packages. nutshell though: rivRmon hosted Department’s GitHub account. rivRmon supporting website hosted GitHub pages created using pkgdown R package automates creation files necessary static website. extra directories files GitHub repo form part R package noted .Rbuildignore file. new version releases managed GitHub’s Release functionality. new releases linked Zenodo DOI. future versions published please add ORCID account appreciate still attached. fabulous resource get speed R package development covers excellent resource R Packages. GitHub integration R Studio try Happy Git GitHub useR. work package follow: Source latest version GitHub. Make edits/changes code. Commit changes locally. Perform extensive testing locally. Rebuild package (new version), documentation website locally. Update package NEWS file. Test loading package. Run package R CMD checks clear errors. Retest package loading new version. Commit changes along way locally. Push new package GitHub repository. Create new release ensure Zenodo (DOI minted). Tell users new package available access.","code":""},{"path":[]},{"path":"https://dbca-wa.github.io/rivRmon/articles/DeveloperNotes.html","id":"internal-data","dir":"Articles","previous_headings":"Additional package notes","what":"Internal data","title":"Developer Notes","text":"two sources internal data required package operate bundled software. first can found .data/ covers management response triggers. .rda file required can recreated updated easily R required. second internal data source resides .R/ directory sysdata.rda file contains lot extra data including: site locations information. locations oxy plants. coordinates used bathymetry (bottom profiles surfer plots). pre-baked interpolation grids. reclassification matrices used bin continuous metric values discrete colour scales can used. coordinates used “black-” rectangles missing data. phytoplankton plotting colour scale. Recreating data can accomplished editing running script found data-raw/internal_data.R. Note adding new sites accomplished editing shape file maintains spatial integrity relationship sampling sites bathymetry. file path shape file script access can gained contacting DBCA RSSA program. also worth noting inetrnal_data.R script can successfully run present. Whilst impact rivRmon present form update completed negate future issues. Attention needs paid updating older package dependencies required build interpolation grids, namely rgdal, rgeos, raster possibly sp. spatial packages benefit upgraded utilise functionality terra sf, modern equivalents. sysdata.rda just data file multiple objects easy workaround certain objects need updating. Starting clean environment, clicking sysdata.rda R studio load objects environment. developer can update required object resave sysdata.rda (see bottom inetrnal_data.R script notes objects required).","code":""},{"path":"https://dbca-wa.github.io/rivRmon/articles/DeveloperNotes.html","id":"functions","dir":"Articles","previous_headings":"Additional package notes","what":"Functions","title":"Developer Notes","text":"functions live .R files generally quite long can complicated. Internal functions (.e. helper functions run inside main functions exported package) contained data-prep.R contain helpers : finding correct workbooks input surfer phyto functions. ingesting sonde data standardizing output surfer plots special case version use ad hoc plot_metric() function. colour scales surfer plots. creating pretty date (.e. 1st, 2nd, 3rd, 4th etc).","code":""},{"path":"https://dbca-wa.github.io/rivRmon/articles/DeveloperNotes.html","id":"surfer-concept","dir":"Articles","previous_headings":"Additional package notes","what":"Surfer concept","title":"Developer Notes","text":"previously mentioned, surfR functions developed imitate exact outputs proprietary software. accomplish , necessitated departure capable (easier maintain) plotting paradigms. Therefore may helpful understand internal “process” design choices sufR function generalised : File paths data workbooks (1 per sonde) established internal checks establish correct river sufR called. Sonde data read aggregated. helper function necessarily complicated many different sondes used real standardisation naming metrics. Depth profiles sourced. Data interpolations collated. Data interpolated sourced grids. Sampling locations determined locations restricted appearing data (standard response sites). Sampling site labels generated, omitting overplot. Black rectangles generated missing data. Individual ggplot2 objects created 4 metrics specific themes per plot allow correct axis labels etc. plots arranged panel layout written .png. Swan surfR always outputs whole river plot “Narrows ” plot. Canning surfR determines Kent Street weir included based presence sampling sites. , alternate bathymetry profile chosen interpolation now split two grids meet weir. weir produces boundary interpolation.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/articles/DeveloperNotes.html","id":"last-thoughts","dir":"Articles","previous_headings":"Additional package notes","what":"Last thoughts","title":"Developer Notes","text":"new new maintainer/developer please practice creating packages attempting irreversible changes DBCA-WA repository. Whilst Git great version control know Git . dozens resources practicing package creation GitHub workflows. Lastly need contact OIM added administrator dbac-wa/rivRmon repository able push changes package.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/articles/hab.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"How to use the HAB functions","text":"functions created aid compiling HAB reports creating conditionally formatted table pptx format.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/articles/hab.html","id":"stage-one---create-summary-data","dir":"Articles","previous_headings":"","what":"Stage One - Create summary data","title":"How to use the HAB functions","text":"Phytoplankton count data raw form (hereafter called raw data) provides count information multitude species. data analysed provided us Department Water Environmental Regulation’s Phytoplankton Ecology Unit. order compile HAB report data needs summarised reflect HAB related data. first stage undertakes process outputs summaries used stage two. important parameter functions “mngt_response_triggers” csv. csv file containing table reflects current summary groups, included species trigger threshold values HAB report. information guides summary layout also guides final format output pptx file. example.  table variables : table_ord ordering table_name groupings appear final output. unique group must table_ord number. table_name broad grouping individual species assigned . Multiple species can assigned single group. table_name reflects exactly desired format output pptx file. spp_name species names follow format, .e.  snake_case. Make sure spelling reported raw phytoplankton data. surveillance value equal number less equal notification value classified “surveillance” coloured orange output pptx file. notification value greater classified “notification” coloured red output pptx file. make things easier setup, rivRmon package comes example. can read , adjusted accordingly reflect current trigger species thresholds saved csv later use. follow example . making sure access either current management trigger info, created , need supply two file paths. One raw data xlsx spreadsheets file path desired location exported summary data. summary data written HAB_tables/ directory doesn’t already exist created. next function call look something like . thing careful ensuring copying fiile path Windows OS need double backslashes path recognised. example alternative method backslashes converted single forward slash. Lastly two parameters default values. skip defaults 5. format raw data 5 lines unrequired metadata top. format changes can changed . shell refers possible new site Canning River. default FALSE. site becomes permanent addtion monitoring changing value TRUE ensure site reflected summaries output pptx file.","code":"#load the package library(rivRmon)  #assign the internal data to an object called triggers triggers <- mngt_response_triggers  #you can then save straight to csv and edit as you would an excel file readr::write_csv(triggers, path = \"C:/some_file/path\") #run the hab_groupR function hab_groupR(pathin = \"C:/path/to/raw_data\", pathout = \"C:/path/for_export\",            mngt_triggers = \"C:/path/to/trigger/data\")"},{"path":"https://dbca-wa.github.io/rivRmon/articles/hab.html","id":"stage-two---creating-the-conditionally-formatted-pptx-file","dir":"Articles","previous_headings":"","what":"Stage Two - Creating the conditionally formatted pptx file","title":"How to use the HAB functions","text":"next stage reads summary HAB data csv’s based date provided, generates table containing current prior week’s cell counts groupings indicated trigger data conditionally coloured text indicate classification. accomplish , run code similar . hab_tables = input hab_tablR() function file path location HAB_tables/ directory summary csv’s . essentially pathout parameter specified running hab_groupR(). Note format date “yyyymmdd” can presented code snippet contain separators (e.g. “2019/07/15” “2019-07-15”). output single page PowerPoint table different coloured counts per site (depending river). table can either incorporated existing report formatted page size tweaks values can copied put “pre-formatted” table.","code":"#run the hab_tablR function hab_tablR(hab_tables = \"C:/path/to/HAB_tables\", date = \"20190715\",            mngt_triggers = \"C:/path/to/trigger/data\")"},{"path":"https://dbca-wa.github.io/rivRmon/articles/phyto.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"How to use the phyto functions","text":"functions created aid visualising phytoplankton counts Canning Swan estuaries. two stage process details .","code":""},{"path":"https://dbca-wa.github.io/rivRmon/articles/phyto.html","id":"stage-one---create-summary-data","dir":"Articles","previous_headings":"","what":"Stage One - Create summary data","title":"How to use the phyto functions","text":"Phytoplankton count data raw form (hereafter called raw data) provides count information multitude species. data analysed provided us Department Water Environmental Regulation’s Phytoplankton Ecology unit. order visualise data benefits summarising larger groupings. first stage undertakes process outputs summaries used stage two. loading rivRmon package, two file paths provided phyto_groupR() function. file path raw data xlsx spreadsheets file path desired location exported summary data. summary data written summaries/ directory doesn’t already exist created. thing careful ensuring copying fiile path Windows OS need double backslashes path recognised. example alternative method backslashes converted single forward slash. example exported summary csv .","code":"#load the package library(rivRmon)  #run the phyto_groupR function phyto_groupR(pathin = \"C:/path/to/raw_data\", pathout = \"C:/path/for_export\")"},{"path":"https://dbca-wa.github.io/rivRmon/articles/phyto.html","id":"stage-two---creating-the-barcharts-and-running-sheet","dir":"Articles","previous_headings":"","what":"Stage Two - Creating the barcharts and running sheet","title":"How to use the phyto functions","text":"next stage reads summary data csv’s based date provided, generates two barcharts, arranged vertically, one output. top barchart date provided bottom barchart prior sample. sampling estuaries occurs different days, choice date plot data single estuary. words won’t get confused summary csv’s exist estuaries. input phyto_plotR() function file path location summaries/ directory summary csv’s . essentially pathout parameter specified running phyto_groupR(). barcharts (pdf) exported along “running datasheet”. running datasheet csv exported summary data including date provided estuary. run function. two things watch . ensure handled character filepath correctly. Also provide date character string format “yyyymmdd”. can presented code snippet contain separators (e.g. “2019/07/15” “2019-07-15”). example barchart follows. one Swan estuary (identified name sites present). date provided code snippet used creating top barchart. function finds summary data prior sampling effort uses plot bottom barchart.  Lastly example portion running datasheet.","code":"#run the phyto_plotR function phyto_plotR(summary = \"C:/path/for_export\", date = \"20190715\")"},{"path":"https://dbca-wa.github.io/rivRmon/articles/plotmetric.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Ad hoc metric plotting","text":"Sometimes useful ability make quick surfer styled plot. metric one normal metrics plotted using swan_sufR() example metrics recorded sonde. Whilst easy enough plot metric writing code, benefit using new plot_metric() function using rivRmon package data plot river bottom, interpolate samples label sampling sites.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/articles/plotmetric.html","id":"creating-a-metric-plot","dir":"Articles","previous_headings":"","what":"Creating a metric plot","title":"Ad hoc metric plotting","text":"Firstly user needs compile edit sonde data data consistent format. entails: Creating new excel workbook single sheet. sheet must named “edited data”. Copying data two consecutive river sampling days sheet. Editing Date column. Ensure one unique date, can first second day sampling . Editing vertical position column. must named vpos vpos m. Deleting unused columns. important one delete Dep M column. also good practice delete Time, Sample Number, User ID, BGA... Lat Long columns. See example.  NOTE stage BGA data plotted. one sonde records BGA-PC , BGA-PE. situation changes future whichever metric consistently recorded can included plots leaving data. Next function can run. 3 basic parameters. file path (character string) excel workbook described , colour (character string) represent colour sampling points lastly letter (character string) designating Viridis colour scales use, see ggplot2 doco ‘option’ parameter. Example usage . naming convention workbook can whatever makes sense user. Internally function determine river plotting. function called present user numbered list metrics available plot, per example . user inputs number corresponding metric choice. negates awkward representations temperature symbols etc.  Plots rendered png format saved directory called metric_plots located current working directory. examples . plot Swan river showing chlorophyll default colour scale (“d”). plot showing inferno (“b”) colour scale. couple things note: samp parameter useful highlight sampling points chosing colur stands background colour scale choice. colscale parameter choices nothing like standard colours used weekly surfer plots. Viridis colour scales flexible choice plotting metrics defined discrete colour scale . Also aware data range present sonde data always scale Viridis continuous colour scales. colours present winter summer data. plots intended compare time ad hoc glimpse showing present concentrations metric choice. Lastly plot_metric behaves similarly surfer functions logic define status Kent St Weir plot sampling locations whilst labeling usual spots.","code":"#load the package library(rivRmon)  plot_metric(path = \"C:data_location/the workbook you created.xslx\", samp = \"red\",              colscale = \"d\")"},{"path":"https://dbca-wa.github.io/rivRmon/articles/surfr.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"How to make surfer profile plots","text":"Surfer profile plots visualisations 4 physical chemical metrics along Swan Canning rivers. metrics , salinity, dissolved oxygen, chlorophyll temperature interpolated along river length give seamless visualisation. Two sections Swan/Canning river system monitored weekly basis. Canning river estuary (South Canning Bridge Ellison drive) Swan river estuary (Blackwall Reach Power Line crossing West Swan). raw input create plots comes sonde data recorders deployed consecutive days week. Due length time needed sample either rivers, two vessels start different locations enable recording data one day. Therefore raw data one day’s sampling two excel spreadsheets.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/articles/surfr.html","id":"creating-a-surfer-plot","dir":"Articles","previous_headings":"","what":"Creating a surfer plot","title":"How to make surfer profile plots","text":"functions create surfer plots slightly different internally. important note functions specific river expected inputs parameters. run functions make sure package loaded. path variable character string file path locations sonde data day wish plot. described two excel spreadsheets. Make sure right data right function. Sonde data “c” name Canning “s” Swan. Please ensure copy paste file path Windows OS need either double backslashes convert single forward slash. two parameters supplied either function relate oxygenation status two locations specific river. Permissable colours green, blue red. run function read sonde data, process interpolations generate plots. plots written directory created location sonde data, called “plots”. Examples .","code":"#load the package library(rivRmon)  #Canning river - forward slash example canning_surfR(path = \"C:blah/blah/data_location\", obac = \"green\", onic = \"red\")  #Swan river - backslash example swan_surfR(path = \"C:blah\\\\blah\\\\data_location\", ovit = \"blue\", ocav = \"red\")"},{"path":"https://dbca-wa.github.io/rivRmon/articles/surfr.html","id":"canning-river-example","dir":"Articles","previous_headings":"Creating a surfer plot","what":"Canning river example","title":"How to make surfer profile plots","text":"plot produced using parameters described data 23/07/2019 using canning_surfR() function. Note block-like structure downstream site KEN represents Kent street weir open position. function interpret status weir sonde data plot accordingly.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/articles/surfr.html","id":"swan-river-examples","dir":"Articles","previous_headings":"Creating a surfer plot","what":"Swan river examples","title":"How to make surfer profile plots","text":"swan_surfR() function run, produces two outputs. One visualisation whole river river mouth Power Lines zoomed view Narrows Power Lines. enable detailed view shallower waters. examples run using parameters described . Note blacked portions beginning plot. Blacked regions cover sections river data collected date. sites (FP1 FP7) within Port Fremantle data sometimes provided. sections river may blacked time time due equipment malfunction generally inability hold station site due conditions day (strong wind, strong current etc).  example middle upper Swan showing greater detail.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/articles/surfr.html","id":"things-to-note","dir":"Articles","previous_headings":"","what":"Things to note","title":"How to make surfer profile plots","text":"current functions can handle outputs YSI EXO sondes can handle historical differences metric naming conventions output formats. recommended however current conventions place naming editing sonde outputs maintained. major deviations additions likely result errors. rendering “river bottom” designed around long term monitoring locations. new site needs added require rewriting various parts base code internal data sets. need arises please contact author. “river bottom” created extracting depths Corporate bathymetry data along reckoned navigation route attempts stick deepest sections river intersects sampling sites. Additional extraction points generated 100 meter intervals along route. canning_surfR() function detects weir closed (presence cannoxy site data), performs two interpolations ensure weir used barrier interpolations. thin plate spline used calculate interpolation data sampling sites. Remember visualisation tool . Obtaining precise measurements metrics outside sampling sites can obtained physically sampling areas. interpolation can estimation, particularly sparse input data.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bart Huntley. Author, maintainer, programmer, researcher.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Huntley B (2024). rivRmon: Functions aid reporting Swan Canning Rivers. R package version 3.0.0, https://dbca-wa.github.io/rivRmon, https://github.com/dbca-wa/rivRmon.","code":"@Manual{,   title = {rivRmon: Functions to aid in reporting on the Swan and Canning Rivers},   author = {Bart Huntley},   year = {2024},   note = {R package version 3.0.0, https://dbca-wa.github.io/rivRmon},   url = {https://github.com/dbca-wa/rivRmon}, }"},{"path":"https://dbca-wa.github.io/rivRmon/index.html","id":"rivrmon-","dir":"","previous_headings":"","what":"Functions to aid in reporting on the Swan and Canning Rivers","title":"Functions to aid in reporting on the Swan and Canning Rivers","text":"goal rivRmon provide tools aid data munging visualisation monitoring data Swan Canning Rivers.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Functions to aid in reporting on the Swan and Canning Rivers","text":"can install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"dbca-wa/rivRmon\") library(rivRmon)"},{"path":"https://dbca-wa.github.io/rivRmon/index.html","id":"help-files","dir":"","previous_headings":"","what":"Help Files","title":"Functions to aid in reporting on the Swan and Canning Rivers","text":"functions within rivRmon usual R help files, however best place see vignettes rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_chla_c.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for annual Canning River report plots and tables for chlorophyl a. — ann_rep_chla_c","title":"Function for annual Canning River report plots and tables for chlorophyl a. — ann_rep_chla_c","text":"ann_rep_chla_c takes export filepath, data, surface integrated     plot colours produces panel plots tables chlorophyl .","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_chla_c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for annual Canning River report plots and tables for chlorophyl a. — ann_rep_chla_c","text":"","code":"ann_rep_chla_c(outpath, data, surface, chloro)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_chla_c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for annual Canning River report plots and tables for chlorophyl a. — ann_rep_chla_c","text":"outpath filepath desired export location. data data object created running `canning_WIN_report_data`. surface colour surface plots. Can named colour hex format. chloro colour integrated plots. Can named colour hex format.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_chla_c.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for annual Canning River report plots and tables for chlorophyl a. — ann_rep_chla_c","text":" panel plot chlorophyl csv metrics     inclusion table.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_chla_c.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function for annual Canning River report plots and tables for chlorophyl a. — ann_rep_chla_c","text":"Outputs exported two folders  outpath     location. `c_panels/` plots `c_tables/` data tables.     need created exist.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_chla_c.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function for annual Canning River report plots and tables for chlorophyl a. — ann_rep_chla_c","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_chla_c.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for annual Canning River report plots and tables for chlorophyl a. — ann_rep_chla_c","text":"","code":"if (FALSE) { # \\dontrun{ ann_rep_chla_c(outpath, data, surface = \"blue\", chloro = \"darkgreen\")} # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_chla_s.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for annual Swan River report plots and tables for chlorophyl a. — ann_rep_chla_s","title":"Function for annual Swan River report plots and tables for chlorophyl a. — ann_rep_chla_s","text":"ann_rep_chla_s takes export filepath, data, surface integrated     plot colours produces panel plots tables chlorophyl .","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_chla_s.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for annual Swan River report plots and tables for chlorophyl a. — ann_rep_chla_s","text":"","code":"ann_rep_chla_s(outpath, data, surface, chloro)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_chla_s.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for annual Swan River report plots and tables for chlorophyl a. — ann_rep_chla_s","text":"outpath filepath desired export location. data data object created running `swan_WIN_report_data`. surface colour surface plots. Can named colour hex format. chloro colour integrated plots. Can named colour hex format.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_chla_s.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for annual Swan River report plots and tables for chlorophyl a. — ann_rep_chla_s","text":" panel plot chlorophyl csv metrics     inclusion table.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_chla_s.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function for annual Swan River report plots and tables for chlorophyl a. — ann_rep_chla_s","text":"Outputs exported two folders outpath     location. `s_panels/` plots `s_tables/` data tables.     need created exist.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_chla_s.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function for annual Swan River report plots and tables for chlorophyl a. — ann_rep_chla_s","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_chla_s.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for annual Swan River report plots and tables for chlorophyl a. — ann_rep_chla_s","text":"","code":"if (FALSE) { # \\dontrun{ ann_rep_chla_s(outpath, data, surface = \"blue\", chloro = \"darkgreen\")} # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_doc_c.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for annual Canning River report plots and tables for dissolved organic carbon. — ann_rep_doc_c","title":"Function for annual Canning River report plots and tables for dissolved organic carbon. — ann_rep_doc_c","text":"ann_rep_doc_c takes export filepath, data, surface     plot colour produces panel plots tables dissolved organic     carbon","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_doc_c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for annual Canning River report plots and tables for dissolved organic carbon. — ann_rep_doc_c","text":"","code":"ann_rep_doc_c(outpath, data, surface)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_doc_c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for annual Canning River report plots and tables for dissolved organic carbon. — ann_rep_doc_c","text":"outpath filepath desired export location. data data object created running `canning_WIN_report_data`. surface colour surface plots. Can named colour hex format.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_doc_c.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for annual Canning River report plots and tables for dissolved organic carbon. — ann_rep_doc_c","text":" panel plot dissolved organic carbon csv metrics     inclusion table.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_doc_c.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function for annual Canning River report plots and tables for dissolved organic carbon. — ann_rep_doc_c","text":"Outputs exported two folders  outpath     location. `c_panels/` plots `c_tables/` data tables.     need created exist.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_doc_c.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function for annual Canning River report plots and tables for dissolved organic carbon. — ann_rep_doc_c","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_doc_c.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for annual Canning River report plots and tables for dissolved organic carbon. — ann_rep_doc_c","text":"","code":"if (FALSE) { # \\dontrun{ ann_rep_doc_c(outpath, data, surface = \"blue\")} # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp1_c.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for annual Canning River report plots and tables for group 1 metrics. — ann_rep_grp1_c","title":"Function for annual Canning River report plots and tables for group 1 metrics. — ann_rep_grp1_c","text":"ann_rep_grp1_c takes export filepath, data, surface bottom     plot colours produces panel plots tables group 1 metrics.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp1_c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for annual Canning River report plots and tables for group 1 metrics. — ann_rep_grp1_c","text":"","code":"ann_rep_grp1_c(outpath, data, surface, bottom)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp1_c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for annual Canning River report plots and tables for group 1 metrics. — ann_rep_grp1_c","text":"outpath filepath desired export location. data data object created running `canning_WIN_report_data`. surface colour surface plots. Can named colour hex format. bottom colour bottom plots. Can named colour hex format.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp1_c.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for annual Canning River report plots and tables for group 1 metrics. — ann_rep_grp1_c","text":"separate panel plot metric csv metrics     inclusion table.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp1_c.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function for annual Canning River report plots and tables for group 1 metrics. — ann_rep_grp1_c","text":"Group 1 metrics grouping based common collection     method, sample type display parameters case includes,     total nitrogen, ammonia nitrogen, total oxidised nitrogen, dissolved     organic nitrogen, total phosphorous filterable reactive phosphorous.     Outputs exported two folders outpath location.     `c_panels/` plots `c_tables/` data tables. need     created exist.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp1_c.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function for annual Canning River report plots and tables for group 1 metrics. — ann_rep_grp1_c","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp1_c.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for annual Canning River report plots and tables for group 1 metrics. — ann_rep_grp1_c","text":"","code":"if (FALSE) { # \\dontrun{ ann_rep_grp1_c(outpath, data, surface = \"blue\", bottom = \"red\")} # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp1_s.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for annual Swan River report plots and tables for group 1 metrics — ann_rep_grp1_s","title":"Function for annual Swan River report plots and tables for group 1 metrics — ann_rep_grp1_s","text":"ann_rep_grp1_s takes export filepath, data, surface bottom     plot colours produces panel plots tables group 1 metrics.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp1_s.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for annual Swan River report plots and tables for group 1 metrics — ann_rep_grp1_s","text":"","code":"ann_rep_grp1_s(outpath, data, surface, bottom)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp1_s.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for annual Swan River report plots and tables for group 1 metrics — ann_rep_grp1_s","text":"outpath filepath desired export location. data data object created running `swan_WIN_report_data`. surface colour surface plots. Can named colour hex format. bottom colour bottom plots. Can named colour hex format.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp1_s.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for annual Swan River report plots and tables for group 1 metrics — ann_rep_grp1_s","text":"separate panel plot metric csv metrics     inclusion table.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp1_s.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function for annual Swan River report plots and tables for group 1 metrics — ann_rep_grp1_s","text":"Group 1 metrics grouping based common  collection     method, sample type display parameters case includes,     total nitrogen, ammonia nitrogen, total oxidised nitrogen, dissolved     organic nitrogen, total phosphorous, filterable reactive phosphorous     silica. Outputs exported two folders outpath     location. `s_panels/` plots `s_tables/` data tables.     need created exist.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp1_s.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function for annual Swan River report plots and tables for group 1 metrics — ann_rep_grp1_s","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp1_s.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for annual Swan River report plots and tables for group 1 metrics — ann_rep_grp1_s","text":"","code":"if (FALSE) { # \\dontrun{ ann_rep_grp1_s(outpath, data, surface = \"blue\", bottom = \"red\")} # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp2_s.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for annual Swan River report plots and tables for group 2 metrics — ann_rep_grp2_s","title":"Function for annual Swan River report plots and tables for group 2 metrics — ann_rep_grp2_s","text":"ann_rep_grp2_s takes export filepath, data, surface plot     colours produces panel plots tables group 2 metrics.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp2_s.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for annual Swan River report plots and tables for group 2 metrics — ann_rep_grp2_s","text":"","code":"ann_rep_grp2_s(outpath, data, surface)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp2_s.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for annual Swan River report plots and tables for group 2 metrics — ann_rep_grp2_s","text":"outpath filepath desired export location. data data object created running `swan_WIN_report_data`. surface colour surface plots. Can named colour hex format.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp2_s.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for annual Swan River report plots and tables for group 2 metrics — ann_rep_grp2_s","text":"separate panel plot metric csv metrics     inclusion table.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp2_s.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function for annual Swan River report plots and tables for group 2 metrics — ann_rep_grp2_s","text":"Group 2 metrics grouping based common collection     method, sample type display parameters case includes,     alkalinity, dissolved organic carbon TSS. Outputs exported     two folders outpath location. `s_panels/` plots     `s_tables/` data tables. need created     exist.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp2_s.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function for annual Swan River report plots and tables for group 2 metrics — ann_rep_grp2_s","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp2_s.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for annual Swan River report plots and tables for group 2 metrics — ann_rep_grp2_s","text":"","code":"if (FALSE) { # \\dontrun{ ann_rep_grp2_s(outpath, data, surface = \"blue\")} # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp3_c.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for annual Canning River report plots and tables for group 3 metrics — ann_rep_grp3_c","title":"Function for annual Canning River report plots and tables for group 3 metrics — ann_rep_grp3_c","text":"ann_rep_grp3_c takes export filepath, data, surface bottom     plot colours produces panel plots tables group 3 metrics.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp3_c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for annual Canning River report plots and tables for group 3 metrics — ann_rep_grp3_c","text":"","code":"ann_rep_grp3_c(outpath, data, surface, bottom)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp3_c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for annual Canning River report plots and tables for group 3 metrics — ann_rep_grp3_c","text":"outpath filepath desired export location. data data object created running `canning_WIN_report_data`. surface colour surface plots. Can named colour hex format. bottom colour bottom plots. Can named colour hex format.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp3_c.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for annual Canning River report plots and tables for group 3 metrics — ann_rep_grp3_c","text":"separate panel plot nutrient csv metrics     inclusion table.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp3_c.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function for annual Canning River report plots and tables for group 3 metrics — ann_rep_grp3_c","text":"Group 3 metrics grouping based common collection     method, sample type display parameters case includes,     dissolved oxygen, salinity, temperature, pH.     Outputs exported two folders outpath location.     `c_panels/` plots `c_tables/` data tables. need     created exist.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp3_c.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function for annual Canning River report plots and tables for group 3 metrics — ann_rep_grp3_c","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp3_c.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for annual Canning River report plots and tables for group 3 metrics — ann_rep_grp3_c","text":"","code":"if (FALSE) { # \\dontrun{ ann_rep_grp3_c(outpath, data, surface = \"blue\", bottom = \"red\")} # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp3_s.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for annual Swan River report plots and tables for group 3 metrics — ann_rep_grp3_s","title":"Function for annual Swan River report plots and tables for group 3 metrics — ann_rep_grp3_s","text":"ann_rep_grp3_s takes export filepath, data, surface bottom     plot colours produces panel plots tables group 3 metrics.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp3_s.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for annual Swan River report plots and tables for group 3 metrics — ann_rep_grp3_s","text":"","code":"ann_rep_grp3_s(outpath, data, surface, bottom)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp3_s.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for annual Swan River report plots and tables for group 3 metrics — ann_rep_grp3_s","text":"outpath filepath desired export location. data data object created running `swan_WIN_report_data`. surface colour surface plots. Can named colour hex format. bottom colour bottom plots. Can named colour hex format.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp3_s.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for annual Swan River report plots and tables for group 3 metrics — ann_rep_grp3_s","text":"separate panel plot metric csv metrics     inclusion table.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp3_s.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function for annual Swan River report plots and tables for group 3 metrics — ann_rep_grp3_s","text":"Group 3 metrics grouping based common collection     method, sample type display parameters case includes,     dissolved oxygen, salinity, temperature pH. Outputs exported     two folders outpath location. `s_panels/` plots     `s_tables/` data tables. need created     exist.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp3_s.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function for annual Swan River report plots and tables for group 3 metrics — ann_rep_grp3_s","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_grp3_s.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for annual Swan River report plots and tables for group 3 metrics — ann_rep_grp3_s","text":"","code":"if (FALSE) { # \\dontrun{ ann_rep_grp3_s(outpath, data, surface = \"blue\", bottom = \"red\")} # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_secchi_c.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for annual Canning River report plots and tables for secchi depth. — ann_rep_secchi_c","title":"Function for annual Canning River report plots and tables for secchi depth. — ann_rep_secchi_c","text":"ann_rep_secchi_c takes export filepath, data, surface     plot colour produces panel plots tables secchi depth.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_secchi_c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for annual Canning River report plots and tables for secchi depth. — ann_rep_secchi_c","text":"","code":"ann_rep_secchi_c(outpath, data, surface)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_secchi_c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for annual Canning River report plots and tables for secchi depth. — ann_rep_secchi_c","text":"outpath filepath desired export location. data data object created running `canning_WIN_report_data`. surface colour surface plots. Can named colour hex format.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_secchi_c.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for annual Canning River report plots and tables for secchi depth. — ann_rep_secchi_c","text":" panel plot secchi depth csv metrics     inclusion table.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_secchi_c.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function for annual Canning River report plots and tables for secchi depth. — ann_rep_secchi_c","text":"Outputs exported two folders outpath     location. `c_panels/` plots `c_tables/` data tables.     need created exist.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_secchi_c.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function for annual Canning River report plots and tables for secchi depth. — ann_rep_secchi_c","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_secchi_c.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for annual Canning River report plots and tables for secchi depth. — ann_rep_secchi_c","text":"","code":"if (FALSE) { # \\dontrun{ ann_rep_secchi_c(outpath, data, surface = \"blue\")} # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_secchi_s.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for annual Swan River report plots and tables for secchi depth. — ann_rep_secchi_s","title":"Function for annual Swan River report plots and tables for secchi depth. — ann_rep_secchi_s","text":"ann_rep_secchi_s takes export filepath, data, surface plot colours     produces panel plots tables secchi depth.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_secchi_s.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for annual Swan River report plots and tables for secchi depth. — ann_rep_secchi_s","text":"","code":"ann_rep_secchi_s(outpath, data, surface)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_secchi_s.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for annual Swan River report plots and tables for secchi depth. — ann_rep_secchi_s","text":"outpath filepath desired export location. data data object created running `swan_WIN_report_data`. surface colour surface plots. Can named colour hex format.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_secchi_s.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for annual Swan River report plots and tables for secchi depth. — ann_rep_secchi_s","text":" panel plot secchi depth csv metrics     inclusion table.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_secchi_s.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function for annual Swan River report plots and tables for secchi depth. — ann_rep_secchi_s","text":"Outputs exported two folders outpath location.     `s_panels/` plots `s_tables/` data tables. need     created exist.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_secchi_s.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function for annual Swan River report plots and tables for secchi depth. — ann_rep_secchi_s","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_secchi_s.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for annual Swan River report plots and tables for secchi depth. — ann_rep_secchi_s","text":"","code":"if (FALSE) { # \\dontrun{ ann_rep_secchi_s(outpath, data, surface = \"blue\")} # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_si_c.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for annual Canning River report plots and tables for silica. — ann_rep_si_c","title":"Function for annual Canning River report plots and tables for silica. — ann_rep_si_c","text":"ann_rep_si_c takes export filepath, data, surface     plot colour produces panel plots tables silica.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_si_c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for annual Canning River report plots and tables for silica. — ann_rep_si_c","text":"","code":"ann_rep_si_c(outpath, data, surface)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_si_c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for annual Canning River report plots and tables for silica. — ann_rep_si_c","text":"outpath filepath desired export location. data data object created running `canning_WIN_report_data`. surface colour surface plots. Can named colour hex format.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_si_c.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for annual Canning River report plots and tables for silica. — ann_rep_si_c","text":" panel plot silica csv metrics     inclusion table.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_si_c.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function for annual Canning River report plots and tables for silica. — ann_rep_si_c","text":"Outputs exported two folders outpath     location. `c_panels/` plots `c_tables/` data tables.     need created exist.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_si_c.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function for annual Canning River report plots and tables for silica. — ann_rep_si_c","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/ann_rep_si_c.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function for annual Canning River report plots and tables for silica. — ann_rep_si_c","text":"","code":"if (FALSE) { # \\dontrun{ ann_rep_si_c(outpath, data, surface = \"blue\")} # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/canning_reportR.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create all of the plots and tables for the annual Canning River report. — canning_reportR","title":"Function to create all of the plots and tables for the annual Canning River report. — canning_reportR","text":"canning_reportR takes export filepath, data, surface     plot colour produces panel plots tables metrics.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/canning_reportR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create all of the plots and tables for the annual Canning River report. — canning_reportR","text":"","code":"canning_reportR(   inpath,   outpath,   surface = \"blue\",   bottom = \"red\",   chloro = \"darkgreen\" )"},{"path":"https://dbca-wa.github.io/rivRmon/reference/canning_reportR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create all of the plots and tables for the annual Canning River report. — canning_reportR","text":"inpath character filepath premade annual report data canning_WIN_report_data. outpath character filepath desired export location. surface colour surface plots. Can named colour hex format. Defaults \"blue\". bottom colour bottom plots. Can named colour hex format. Defaults \"red\". chloro colour integrated plots. Can named colour hex format. Defaults \"darkgreen\".","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/canning_reportR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create all of the plots and tables for the annual Canning River report. — canning_reportR","text":"panel plots metrics csvs metrics     inclusion tables.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/canning_reportR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to create all of the plots and tables for the annual Canning River report. — canning_reportR","text":"wrapper function runs individual functions     produce plots tables Canning River.     Outputs exported two folders created outpath     location. `c_panels/` plots `c_tables/` data tables.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/canning_reportR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to create all of the plots and tables for the annual Canning River report. — canning_reportR","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/canning_reportR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create all of the plots and tables for the annual Canning River report. — canning_reportR","text":"","code":"if (FALSE) { # \\dontrun{ canning_reportR(inpath, outpath, surface = \"blue\", bottom = \"red\", chloro = \"darkgreen\")} # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/canning_surfR.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads in external data, combines with internal datasets and produces Canning River surfer plots — canning_surfR","title":"Reads in external data, combines with internal datasets and produces Canning River surfer plots — canning_surfR","text":"canning_surfR takes file path Canning River sonde output creates     four panel (single column) surfer plot salinity, dissolved oxygen,     chlorophyll , temperature png format. function creates     directory called `plots/` file path store png's. Code expects     2 excel workbooks one monitoring run.  Note sonde data EXO     models reads depth VPos metric. sonde models use     variant depth metric.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/canning_surfR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads in external data, combines with internal datasets and produces Canning River surfer plots — canning_surfR","text":"","code":"canning_surfR(path, obac, onic, SHELL = FALSE)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/canning_surfR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads in external data, combines with internal datasets and produces Canning River surfer plots — canning_surfR","text":"path Character string filepath location sonde data xlsx workbooks. obac Character string (\"green\", \"blue\" \"red\") indicating oxygenation plant status site BAC. onic Character string (\"green\", \"blue\" \"red\") indicating oxygenation plant status site NIC. SHELL Logical (TRUE/FALSE) indicating whether include Shelley Bridge site.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/canning_surfR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads in external data, combines with internal datasets and produces Canning River surfer plots — canning_surfR","text":"png four panel surfer plot Canning River. Saved     directory called `plots/`.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/canning_surfR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reads in external data, combines with internal datasets and produces Canning River surfer plots — canning_surfR","text":"Surfer plots display     cross-section river metrics interest     interpolated sonde locations. Thin plate spline     used interpolation. river \"bottom\" displayed puts interpolation context.     river bottom derived combination historical     maximum depths sampling locations well station points extracted     \"best\" navigation line latest corporate bathymetry. See     project documentation details.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/canning_surfR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reads in external data, combines with internal datasets and produces Canning River surfer plots — canning_surfR","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/canning_surfR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads in external data, combines with internal datasets and produces Canning River surfer plots — canning_surfR","text":"","code":"if (FALSE) { # \\dontrun{ canning_surfR(path = \"Z:/DEC/MonitoringProgram/Data\", obac = \"green\", onic = \"red\", SHELL = TRUE) } # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/canning_WIN_report_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to read and format water quality data obtained from the WIR water portal for use in annual reporting for the Canning River — canning_WIN_report_data","title":"Function to read and format water quality data obtained from the WIR water portal for use in annual reporting for the Canning River — canning_WIN_report_data","text":"canning_WIN_report_data reads xlsx downloaded files WIR     based reporting year, formats data use generating     annual report.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/canning_WIN_report_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to read and format water quality data obtained from the WIR water portal for use in annual reporting for the Canning River — canning_WIN_report_data","text":"","code":"canning_WIN_report_data(inpath, reportingYear = 2019, outpath)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/canning_WIN_report_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to read and format water quality data obtained from the WIR water portal for use in annual reporting for the Canning River — canning_WIN_report_data","text":"inpath character filepath downloaded data xlsx files. reportingYear 4 digit numerical representing current reporting year. outpath character filepath desired export location.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/canning_WIN_report_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to read and format water quality data obtained from the WIR water portal for use in annual reporting for the Canning River — canning_WIN_report_data","text":"csv export named SG-E-CANEST_annual_report_data_for_YYYY.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/canning_WIN_report_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to read and format water quality data obtained from the WIR water portal for use in annual reporting for the Canning River — canning_WIN_report_data","text":"Original source data must downloaded     http://wir.water.wa.gov.au/Pages/Water-Information-Reporting.aspx     using keyword \"SG-E-CANEST\" requesting \"Water Quality (discrete)     Site(s) cross-tabulated\". datasets read     reformatted ease use annual report.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/canning_WIN_report_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to read and format water quality data obtained from the WIR water portal for use in annual reporting for the Canning River — canning_WIN_report_data","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/canning_WIN_report_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to read and format water quality data obtained from the WIR water portal for use in annual reporting for the Canning River — canning_WIN_report_data","text":"","code":"if (FALSE) { # \\dontrun{ canning_WIN_report_data(inpath, reportYear = 2019, outpath)} # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/CKAN_canning_surfR.html","id":null,"dir":"Reference","previous_headings":"","what":"CKAN version. Reads in external data, combines with internal datasets and produces Canning River surfer plots — CKAN_canning_surfR","title":"CKAN version. Reads in external data, combines with internal datasets and produces Canning River surfer plots — CKAN_canning_surfR","text":"canning_surfR takes file path Canning River sonde output creates     four panel (single column) surfer plot salinity, dissolved oxygen,     chlorophyll , temperature pdf format. function creates     directory called `plots/` file path store pdf's. Code expects     2 excel workbooks one monitoring run.  Note sonde data EXO     models reads depth VPos metric. sonde models use     variant depth metric.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/CKAN_canning_surfR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CKAN version. Reads in external data, combines with internal datasets and produces Canning River surfer plots — CKAN_canning_surfR","text":"","code":"CKAN_canning_surfR(path, obac, onic)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/CKAN_canning_surfR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CKAN version. Reads in external data, combines with internal datasets and produces Canning River surfer plots — CKAN_canning_surfR","text":"path Character string filepath location sonde data xlsx workbooks. obac Character string (\"green\", \"blue\" \"red\") indicating oxygenation plant status site BAC. onic Character string (\"green\", \"blue\" \"red\") indicating oxygenation plant status site NIC.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/CKAN_canning_surfR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CKAN version. Reads in external data, combines with internal datasets and produces Canning River surfer plots — CKAN_canning_surfR","text":"pdf format four panel surfer plot Canning River. Saved     directory called `plots/`.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/CKAN_canning_surfR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CKAN version. Reads in external data, combines with internal datasets and produces Canning River surfer plots — CKAN_canning_surfR","text":"Surfer plots display     cross-section river metrics interest     interpolated sonde locations. Thin plate spline     used interpolation. river \"bottom\" displayed puts interpolation context.     river bottom derived combination historical     maximum depths sampling locations well station points extracted     \"best\" navigation line latest corporate bathymetry. See     project documentation details.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/CKAN_canning_surfR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CKAN version. Reads in external data, combines with internal datasets and produces Canning River surfer plots — CKAN_canning_surfR","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/CKAN_canning_surfR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CKAN version. Reads in external data, combines with internal datasets and produces Canning River surfer plots — CKAN_canning_surfR","text":"","code":"if (FALSE) { # \\dontrun{ canning_surfR(path = \"Z:/DEC/MonitoringProgram/Data\", obac = \"green\", onic = \"red\") } # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/CKAN_swan_surfR.html","id":null,"dir":"Reference","previous_headings":"","what":"CKAN version. Reads in external data, combines with internal datasets and produces Swan River surfer plots — CKAN_swan_surfR","title":"CKAN version. Reads in external data, combines with internal datasets and produces Swan River surfer plots — CKAN_swan_surfR","text":"CKAN_swan_surfR takes file path Project folder     called \"data\" contains Swan River sonde outputs creates     four panel (single column) surfer plot salinity, dissolved oxygen,     chlorophyll , temperature pdf format. Code expects     2 excel workbooks one monitoring run. Note sonde data EXO     models reads depth VPos metric. sonde models use     variant depth metric.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/CKAN_swan_surfR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CKAN version. Reads in external data, combines with internal datasets and produces Swan River surfer plots — CKAN_swan_surfR","text":"","code":"CKAN_swan_surfR(path, ovit, ocav)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/CKAN_swan_surfR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CKAN version. Reads in external data, combines with internal datasets and produces Swan River surfer plots — CKAN_swan_surfR","text":"path Character string filepath Project location. Sonde data xlsx workbooks directory within Project called `data/`. ovit Character string (\"green\", \"blue\" \"red\") indicating oxygenation plant status site VIT. ocav Character string (\"green\", \"blue\" \"red\") indicating oxygenation plant status site CAV.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/CKAN_swan_surfR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CKAN version. Reads in external data, combines with internal datasets and produces Swan River surfer plots — CKAN_swan_surfR","text":"Two pdf format four panel surfer plots Swan River. One shows    full extent monitoring run (river mouth just beyond    site POL - Upper Swan Power Lines). second shows Narrows    Bridge site POL. Saved Project directory `plots/`.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/CKAN_swan_surfR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CKAN version. Reads in external data, combines with internal datasets and produces Swan River surfer plots — CKAN_swan_surfR","text":"Surfer plots display     cross-section river metrics interest     interpolated sonde locations. Thin plate spline     used interpolation. river \"bottom\" displayed puts interpolation context.     river bottom derived combination historical     maximum depths sampling locations well station points extracted     \"best\" navigation line latest corporate bathymetry. See     project documentation details.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/CKAN_swan_surfR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CKAN version. Reads in external data, combines with internal datasets and produces Swan River surfer plots — CKAN_swan_surfR","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/CKAN_swan_surfR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CKAN version. Reads in external data, combines with internal datasets and produces Swan River surfer plots — CKAN_swan_surfR","text":"","code":"if (FALSE) { # \\dontrun{ swan_surfR(path = \"Z:/DEC/MonitoringProgram\", ovit = \"green\", ocav = \"red\") } # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/data_finder.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds filepath to specific river data — data_finder","title":"Finds filepath to specific river data — data_finder","text":"data_finder takes filepath river designator returns     complete filepaths specified river data.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/data_finder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds filepath to specific river data — data_finder","text":"","code":"data_finder(path, river)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/data_finder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds filepath to specific river data — data_finder","text":"path Character string filepath location sonde data xlsx workbooks. river Character. Either \"c\" Canning River \"s\" Swan River.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/data_finder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds filepath to specific river data — data_finder","text":"data meeting required conditions exist, filepaths data     location. two filepaths per date upper lower     data runs.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/data_finder.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Finds filepath to specific river data — data_finder","text":"function presumes data xlsx format river designator, within name file, preceded 8 digits (date).","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/data_finder.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Finds filepath to specific river data — data_finder","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/data_finder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finds filepath to specific river data — data_finder","text":"","code":"if (FALSE) { # \\dontrun{ data_finder(path = \"Z:/DEC/MonitoringProgram/Data\", river = \"c\")} # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/dynamic_ylim.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to calculate sensible y axis limits from the data — dynamic_ylim","title":"Helper function to calculate sensible y axis limits from the data — dynamic_ylim","text":"dynamic_ylim takes data variable calculates maximum     value background present period plotting variables, finds     maximum values adds 10     Lower y limit zero. highly specific data structure created     processing annual report data.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/dynamic_ylim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to calculate sensible y axis limits from the data — dynamic_ylim","text":"","code":"dynamic_ylim(x)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/dynamic_ylim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to calculate sensible y axis limits from the data — dynamic_ylim","text":"x data.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/dynamic_ylim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to calculate sensible y axis limits from the data — dynamic_ylim","text":"numeric vector length 2, first value zero, second calculated     y limit. passed ylim argument ggplot call.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/dynamic_ylim.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function to calculate sensible y axis limits from the data — dynamic_ylim","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/dynamic_ylim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to calculate sensible y axis limits from the data — dynamic_ylim","text":"","code":"if (FALSE) { # \\dontrun{ dynamic_ylim(data)} # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/get_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for extracting legend from a plot — get_legend","title":"Helper function for extracting legend from a plot — get_legend","text":"get_legend takes ggplot object returns legend grob","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/get_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for extracting legend from a plot — get_legend","text":"","code":"get_legend(myggplot)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/get_legend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for extracting legend from a plot — get_legend","text":"myggplot ggplot object contains legend","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/get_legend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for extracting legend from a plot — get_legend","text":"legend grob","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/get_legend.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper function for extracting legend from a plot — get_legend","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/get_legend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function for extracting legend from a plot — get_legend","text":"","code":"if (FALSE) { # \\dontrun{ get_legend(myggplot)} # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/hab_groupR.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates summary HAB data for conditionally formatted table export — hab_groupR","title":"Creates summary HAB data for conditionally formatted table export — hab_groupR","text":"hab_groupR takes file path raw phyto data xlsx spreadsheets     creates summary data use HAB reporting tables.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/hab_groupR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates summary HAB data for conditionally formatted table export — hab_groupR","text":"","code":"hab_groupR(pathin, pathout, skip = 5, mngt_triggers, SHELL = FALSE)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/hab_groupR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates summary HAB data for conditionally formatted table export — hab_groupR","text":"pathin character filepath location raw phytoplankton xlsx spreadsheets. pathout character filepath location desired directory summary csv files, suggest `pathin` mngt_triggers character filepath name `mngt_response_triggers_2020.csv` data file indicates group names, species names trigger thresholds management action. See package example dataset `mngt_response_triggers` example format required. SHELL logical. Include Canning River site \"Shell\". Defaults FALSE, change required","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/hab_groupR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates summary HAB data for conditionally formatted table export — hab_groupR","text":"precursor function run prior using     (hab_tablR). takes file path raw xlsx     phytoplankton data, creates cummulative counts specific     reportable phytoplankton groups outputs summary csv file.     groups determined input file management species     trigger levels. Summary csv files exported `HAB_tables/` directory named     date, estuary words \"HAB_data\". directory     exist, created.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/hab_groupR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates summary HAB data for conditionally formatted table export — hab_groupR","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/hab_groupR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates summary HAB data for conditionally formatted table export — hab_groupR","text":"","code":"if (FALSE) { # \\dontrun{ phyto_groupR(pathin = \"C:/path/to/raw_data\", pathout = \"C:/path/for_export\", mngt_triggers = \"./mngt_response_triggers_2020.csv\", skip = 5, SHELL = FALSE) } # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/hab_tablR.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates conditionally formatted table as a pptx file from summary HAB data — hab_tablR","title":"Creates conditionally formatted table as a pptx file from summary HAB data — hab_tablR","text":"hab_tablR takes file path summary HAB data date produces     \"present\" \"prior sample\" table phytoplankton counts per site.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/hab_tablR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates conditionally formatted table as a pptx file from summary HAB data — hab_tablR","text":"","code":"hab_tablR(hab_tables, focus_date, mngt_triggers)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/hab_tablR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates conditionally formatted table as a pptx file from summary HAB data — hab_tablR","text":"hab_tables character file path location `HAB_tables/` directory. focus_date character representation date chosen \"present\" sampling week format \"yyyymmdd\". mngt_triggers character filepath name `mngt_response_triggers_YYYY.csv` data file indicates group names, species names trigger thresholds management action. See package example dataset `mngt_response_triggers` example format required.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/hab_tablR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates conditionally formatted table as a pptx file from summary HAB data — hab_tablR","text":"function can run data created running     (hab_groupR) function. read summary     data based provided date, produce conditionally formatted     table date. Values coloured according \"investigate\"     \"notification\" count level river sites specific species. prior     sample's data reported comparisons can made. Data exported pptx file `HAB_tables/` directory. can     dragged dropped PowerPoint template minor resizing.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/hab_tablR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates conditionally formatted table as a pptx file from summary HAB data — hab_tablR","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/hab_tablR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates conditionally formatted table as a pptx file from summary HAB data — hab_tablR","text":"","code":"if (FALSE) { # \\dontrun{ hab_tablR(summary = \"C:/path/to/HAB_tables\", date = \"20190910\", mngt_triggers = \"./mngt_response_triggers_2020.csv\") } # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/just_nums.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates correct suffix for day of month — just_nums","title":"Creates correct suffix for day of month — just_nums","text":"just_nums takes numeric value returns character equivalent     correct suffix, e.g. 'th', 'nd' etc.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/just_nums.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates correct suffix for day of month — just_nums","text":"","code":"just_nums(n)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/just_nums.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates correct suffix for day of month — just_nums","text":"n numeric value day month.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/just_nums.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates correct suffix for day of month — just_nums","text":"character value correct suffix.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/just_nums.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates correct suffix for day of month — just_nums","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/just_nums.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates correct suffix for day of month — just_nums","text":"","code":"if (FALSE) { # \\dontrun{ just_nums(n = 2)} # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/lims_parsR.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates summary LIMs data for interim reporting — lims_parsR","title":"Creates summary LIMs data for interim reporting — lims_parsR","text":"lims_parsR takes file path raw LIMS xlsx spreadsheets     creates summary data.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/lims_parsR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates summary LIMs data for interim reporting — lims_parsR","text":"","code":"lims_parsR(path, skip = 8)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/lims_parsR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates summary LIMs data for interim reporting — lims_parsR","text":"skip numeric number lines skip beginning LIMS data ingest. Defaults 8 suits current LIMS format, change required. pathin character filepath location week's raw LIMS data. Expects 3 CSV files, 2 Swan one Canning. Data summary written location.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/lims_parsR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates summary LIMs data for interim reporting — lims_parsR","text":"takes file path 3 raw CSV files comprising week's     worth sampling output Chem Centre. outputs     summary CSV data file, categorising chlorophyll values low, medium     high. \"Low\" < 4ug, \"medium\" 4 10ug higher represents     \"high\" category. Summary output combined rivers. Output     first day's date sampling week \"interim_pigment_result\" name.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/lims_parsR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates summary LIMs data for interim reporting — lims_parsR","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/lims_parsR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates summary LIMs data for interim reporting — lims_parsR","text":"","code":"if (FALSE) { # \\dontrun{ lims_parsR(pathin = \"C:/path/to/raw_data\", skip = 8) } # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/mngt_response_triggers.html","id":null,"dir":"Reference","previous_headings":"","what":"Management Response Triggers — mngt_response_triggers","title":"Management Response Triggers — mngt_response_triggers","text":"data set example format required creating table ingestion (hab_groupR) (hab_tablR) functions. Values dataset determine species summarised values constitute differing levels management action.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/mngt_response_triggers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Management Response Triggers — mngt_response_triggers","text":"","code":"mngt_response_triggers"},{"path":"https://dbca-wa.github.io/rivRmon/reference/mngt_response_triggers.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Management Response Triggers — mngt_response_triggers","text":"data.frame 5 variables: table_ord numeric index desired order reportable groups table_name character representing reportable group name intended output spp_name character representing exact species name/s compromise reportable group surveillance numeric values categorised surveillance notification numeric values equal categorised notification","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/mngt_response_triggers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Management Response Triggers — mngt_response_triggers","text":"Although example current triggers (time writing) intended used template guide creation trigger data saved csv use HAB functions. Note values falling surveillance notification classified investigate.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/mngt_response_triggers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Management Response Triggers — mngt_response_triggers","text":"","code":"mngt_response_triggers #> # A tibble: 12 × 5 #>    table_ord table_name             spp_name           surveillance notification #>        <dbl> <chr>                  <chr>                     <dbl>        <dbl> #>  1         1 Alex spp               alexandrium_spp               5           10 #>  2         2 Dino spp               dinophysis_acumin…           23          230 #>  3         2 Dino spp               dinophysis_caudata           23          230 #>  4         2 Dino spp               dinophysis_acuta             23          230 #>  5         2 Dino spp               dinophysis_fortii            23          230 #>  6         3 karenia spp            karenia_spp                  50          500 #>  7         4 karlo spp              karlodinium_spp           10000        30000 #>  8         5 Pn seriata group       pseudonitzschia_s…           10          100 #>  9         6 Pn delicatissima group pseudonitzschia_d…          100          500 #> 10         6 Pn delicatissima group pseudonitzschia_s…          100          500 #> 11         7 H akashiwo             heterosigma_akash…        20000        40000 #> 12         8 F japonica             fibrocapsa_japoni…        20000        40000"},{"path":"https://dbca-wa.github.io/rivRmon/reference/oxy_wranglR.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads in curated Oxy KPI sonde data and exports cummulative Oxy KPI plots and stats for the purpose of weekly updates. — oxy_wranglR","title":"Reads in curated Oxy KPI sonde data and exports cummulative Oxy KPI plots and stats for the purpose of weekly updates. — oxy_wranglR","text":"oxy_wranglR takes file path Project folder contains     `data/` directory containing curated dissolved oxygen sonde data.     function summarises data producing stats, saved csv     `data/` KPI plots saved `plots/` directory.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/oxy_wranglR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads in curated Oxy KPI sonde data and exports cummulative Oxy KPI plots and stats for the purpose of weekly updates. — oxy_wranglR","text":"","code":"oxy_wranglR(path, weir_open = NULL, weir_closed = NULL)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/oxy_wranglR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads in curated Oxy KPI sonde data and exports cummulative Oxy KPI plots and stats for the purpose of weekly updates. — oxy_wranglR","text":"path Character string file path location `data/` directory. weir_open Character string representing date (\"yyyy-mm-dd\") Canning Weir opened (appropriate), default: NULL weir_closed Character string representing date (\"yyyy-mm-dd\") Canning Weir closed (appropriate), default: NULL","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/oxy_wranglR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads in curated Oxy KPI sonde data and exports cummulative Oxy KPI plots and stats for the purpose of weekly updates. — oxy_wranglR","text":"Three PNG Oxy KPI plots saved `plots/` directory csv     file current Oxy KPI stats saved tp `data/` directory.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/oxy_wranglR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reads in curated Oxy KPI sonde data and exports cummulative Oxy KPI plots and stats for the purpose of weekly updates. — oxy_wranglR","text":"curated data consists csv file edited data     appended weekly basis. function expects 4 columns:     Site Code, Date, Depth ODO file naming     convention: \"River_yyyy-yy_oxy_kpi.csv\". Please NOTE date format     Date column \"dd-mm-yyyy\". run function outputs weekly operational targets cummulative     annual KPI's 2 mg/L 4 mg/L concentrations dissolved     oxygen, csv files. Function also creates 3 plots. cummulative concentration plot,     > 2 mg/L plot > 4 mg/L plot. Format PNG     knowledge need opened Windows Paint allow     copying pasting weekly update email.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/oxy_wranglR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reads in curated Oxy KPI sonde data and exports cummulative Oxy KPI plots and stats for the purpose of weekly updates. — oxy_wranglR","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/oxy_wranglR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads in curated Oxy KPI sonde data and exports cummulative Oxy KPI plots and stats for the purpose of weekly updates. — oxy_wranglR","text":"","code":"if (FALSE) { # \\dontrun{ oxy_wranglR(path = \"Z:/DEC/MonitoringProgram/Oxy\", weir_open = \"2018-12-24\", weir_closed = NULL) } # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/phyto_finder.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates file paths to raw phytoplankton xlsx spreadsheets — phyto_finder","title":"Creates file paths to raw phytoplankton xlsx spreadsheets — phyto_finder","text":"phyto_finder takes file path raw phytoplankton xlsx spreadsheets     returns full filepath use functions.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/phyto_finder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates file paths to raw phytoplankton xlsx spreadsheets — phyto_finder","text":"","code":"phyto_finder(pathin)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/phyto_finder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates file paths to raw phytoplankton xlsx spreadsheets — phyto_finder","text":"pathin character filepath location raw xlsx spreadsheets","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/phyto_finder.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates file paths to raw phytoplankton xlsx spreadsheets — phyto_finder","text":"helper function set correct file paths     appropriate data xlsx spreadsheets.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/phyto_finder.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates file paths to raw phytoplankton xlsx spreadsheets — phyto_finder","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/phyto_finder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates file paths to raw phytoplankton xlsx spreadsheets — phyto_finder","text":"","code":"if (FALSE) { # \\dontrun{ phyto_finder(pathin = \"C:/path/to/raw_data\") } # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/phyto_groupR.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates summary phytoplankton data for plotting — phyto_groupR","title":"Creates summary phytoplankton data for plotting — phyto_groupR","text":"phyto_groupR takes file path raw phytoplankton xlsx spreadsheets     creates summary data use plotting.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/phyto_groupR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates summary phytoplankton data for plotting — phyto_groupR","text":"","code":"phyto_groupR(pathin, pathout, skip = 5)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/phyto_groupR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates summary phytoplankton data for plotting — phyto_groupR","text":"pathin character filepath location raw phytoplankton xlsx spreadsheets .e. data thephyoplankton lab. pathout character filepath location desired directory summary csv files.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/phyto_groupR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates summary phytoplankton data for plotting — phyto_groupR","text":"precursor function run prior using     (phyto_plotR). takes file path raw xlsx     phytoplankton data, creates summary counts specific name groups     outputs summary csv file. groups , Chlorophytes, Cyanophytes,     Diatoms, Dinoflagellates, Cryptophyta catch . Summary csv files exported `summaries/` directory named     date, river name word \"summary\". directory doesnt     exist, created.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/phyto_groupR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates summary phytoplankton data for plotting — phyto_groupR","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/phyto_groupR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates summary phytoplankton data for plotting — phyto_groupR","text":"","code":"if (FALSE) { # \\dontrun{ phyto_groupR(pathin = \"C:/path/to/raw_data\", pathout = \"C:/path/for_export\", skip = 5) } # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/phyto_plotR.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates barcharts from phytoplankton summary data — phyto_plotR","title":"Creates barcharts from phytoplankton summary data — phyto_plotR","text":"phyto_plotR takes file path summary data date produces     \"present\" \"prior sample\" barcharts phytoplankton counts per site.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/phyto_plotR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates barcharts from phytoplankton summary data — phyto_plotR","text":"","code":"phyto_plotR(summary, date, SHELL = FALSE)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/phyto_plotR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates barcharts from phytoplankton summary data — phyto_plotR","text":"summary character file path location `summaries/` directory. date character representation date chosen \"present\" barchart format \"yyyymmdd\".","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/phyto_plotR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates barcharts from phytoplankton summary data — phyto_plotR","text":"function can run data created running     (phyto_groupR) function. read summary     data based provided date, produce barchart date     prior sample's summary one output. data gathered estuary consecutive days, choice     date determine river summaries plotted. choice     reflected sites plotted barcharts. barcharts     exported (pdf) `summaries/` directory. Lastly function export \"running_datasheet\" contains     summary data estuary prior including date requested.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/phyto_plotR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates barcharts from phytoplankton summary data — phyto_plotR","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/phyto_plotR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates barcharts from phytoplankton summary data — phyto_plotR","text":"","code":"if (FALSE) { # \\dontrun{ phyto_plotR(summary = \"C:/path/to/summary_data\", date = \"20190910\") } # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/plot_metric.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads in external sonde data, combines with internal data sets and produces a single surfer plot of a user defined metric. — plot_metric","title":"Reads in external sonde data, combines with internal data sets and produces a single surfer plot of a user defined metric. — plot_metric","text":"plot_metric takes file path monitoring data creates single      surfer plot user defined metric. Plots saved current      working directory.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/plot_metric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads in external sonde data, combines with internal data sets and produces a single surfer plot of a user defined metric. — plot_metric","text":"","code":"plot_metric(path, samp = \"red\", colscale = \"d\")"},{"path":"https://dbca-wa.github.io/rivRmon/reference/plot_metric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads in external sonde data, combines with internal data sets and produces a single surfer plot of a user defined metric. — plot_metric","text":"path Character string file path location edited xlsx workbook. User expected appended data 2 sondes one work sheet, standardising data naming sheet \"edited data\". Data variables consist date, site vpos columns along measured metrics interest. include GPS coordinates, time  'dep m' columns. samp Colour represented character string (e.g. \"red\", \"cyan\") sampling locations water column. Changing colour can help stand different colour scales used interpolation. Default \"red\". colscale single letter designating Viridis colour scale used interpolation. letter -H. Default \"d\".","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/plot_metric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads in external sonde data, combines with internal data sets and produces a single surfer plot of a user defined metric. — plot_metric","text":"png format single panel surfer plot Canning River user's choice metric saved working directory. Plot name contain date chosen metric.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/plot_metric.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reads in external sonde data, combines with internal data sets and produces a single surfer plot of a user defined metric. — plot_metric","text":"metric plot shows cross-section river metric      interest interpolated sonde locations. thin plate      spline used interpolation. function expects 1 excel workbook one monitoring run. user      expected appended raw data 2 sondes one data file,      ensuring data formats consistent columns. edited sheet      must renamed \"edited data\". Also 'dep m' column      included. Upon reading data, function present user choice      metric plot via numerical keyboard entry. river \"bottom\" displayed puts interpolation context.      river bottom derived combination historical      maximum depths sampling locations well station points extracted      \"best\" navigation line latest corporate bathymetry. See      project documentation details. Note plot designed ad-hoc visualisations.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/plot_metric.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reads in external sonde data, combines with internal data sets and produces a single surfer plot of a user defined metric. — plot_metric","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/plot_metric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads in external sonde data, combines with internal data sets and produces a single surfer plot of a user defined metric. — plot_metric","text":"","code":"if (FALSE) { # \\dontrun{ plot_metric(path = \"Z:/DEC/MonitoringProgram/Data\", samp = \"red\",  colscale = \"a\")  } # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/sonde_reader.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads in sonde data from various model formats and creates tidy data — sonde_reader","title":"Reads in sonde data from various model formats and creates tidy data — sonde_reader","text":"sonde_reader takes filepath one xlsx workbook identified     data_finder determines: determines whether data two header rows cleans data returns tidy data set","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/sonde_reader.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads in sonde data from various model formats and creates tidy data — sonde_reader","text":"","code":"sonde_reader(path)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/sonde_reader.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads in sonde data from various model formats and creates tidy data — sonde_reader","text":"path Character string filepath location sonde data xlsx workbook (one ).","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/sonde_reader.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads in sonde data from various model formats and creates tidy data — sonde_reader","text":"data frame containing: site temperature dissolved oxygen mg/L salinity ppt depth chlorophyll ","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/sonde_reader.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reads in sonde data from various model formats and creates tidy data — sonde_reader","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/sonde_reader.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads in sonde data from various model formats and creates tidy data — sonde_reader","text":"","code":"if (FALSE) { # \\dontrun{ sonde_reader(path = \"Z:/DEC/MonitoringProgram/Data/20191201cpoEXO1.xlsx\")} # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/sonde_reader_metric.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads in sonde data and formats specifically for use for plotting single metrics — sonde_reader_metric","title":"Reads in sonde data and formats specifically for use for plotting single metrics — sonde_reader_metric","text":"sonde_reader_metric takes filepath one xlsx workbook identified    data_finder formats single metric plotting.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/sonde_reader_metric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads in sonde data and formats specifically for use for plotting single metrics — sonde_reader_metric","text":"","code":"sonde_reader_metric(path)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/sonde_reader_metric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads in sonde data and formats specifically for use for plotting single metrics — sonde_reader_metric","text":"path Character string filepath location manually combined sonde data xlsx workbook (one ). Looks shhet tab beginning letter 'e'.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/sonde_reader_metric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads in sonde data and formats specifically for use for plotting single metrics — sonde_reader_metric","text":"data frame 'VPos' variable renamed \"Dep m\"    allow consistency legacy code.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/sonde_reader_metric.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reads in sonde data and formats specifically for use for plotting single metrics — sonde_reader_metric","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/sonde_reader_metric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads in sonde data and formats specifically for use for plotting single metrics — sonde_reader_metric","text":"","code":"if (FALSE) { # \\dontrun{ sonde_reader_metric(path = \"Z:/DEC/MonitoringProgram/Data/20191201cpoEXO1.xlsx\")} # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/surfer_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates correct colour palette for measured metric — surfer_cols","title":"Creates correct colour palette for measured metric — surfer_cols","text":"surfer_cols takes metric designator returns named charcater     colours.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/surfer_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates correct colour palette for measured metric — surfer_cols","text":"","code":"surfer_cols(metric)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/surfer_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates correct colour palette for measured metric — surfer_cols","text":"metric Character string, \"sal\" Salinity, \"\" Dissolved Oxygen mg/L, \"chl\" Chlorophyll , \"temp\" Temperature.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/surfer_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates correct colour palette for measured metric — surfer_cols","text":"named character vector names relate data break values    characters colour hex codes.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/surfer_cols.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Creates correct colour palette for measured metric — surfer_cols","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/surfer_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates correct colour palette for measured metric — surfer_cols","text":"","code":"if (FALSE) { # \\dontrun{ colours <- surfer_cols(metric = \"chl\")} # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/swan_reportR.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create all of the plots and tables for the annual Swan River report. — swan_reportR","title":"Function to create all of the plots and tables for the annual Swan River report. — swan_reportR","text":"swan_reportR produces panel plots tables     metrics.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/swan_reportR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create all of the plots and tables for the annual Swan River report. — swan_reportR","text":"","code":"swan_reportR(   inpath,   outpath,   surface = \"blue\",   bottom = \"red\",   chloro = \"darkgreen\" )"},{"path":"https://dbca-wa.github.io/rivRmon/reference/swan_reportR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create all of the plots and tables for the annual Swan River report. — swan_reportR","text":"inpath character filepath premade annual report data swan_WIN_report_data. outpath character filepath desired export location. surface colour surface plots. Can named colour hex format. Defaults \"blue\". bottom colour bottom plots. Can named colour hex format. Defaults \"red\". chloro colour integrated plots. Can named colour hex format. Defaults \"darkgreen\".","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/swan_reportR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create all of the plots and tables for the annual Swan River report. — swan_reportR","text":"panel plots metrics csvs metrics     inclusion tables.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/swan_reportR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to create all of the plots and tables for the annual Swan River report. — swan_reportR","text":"wrapper function runs individual functions     produce plots tables Swan River.     Outputs exported two folders created outpath     location. `s_panels/` plots `s_tables/` data tables.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/swan_reportR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to create all of the plots and tables for the annual Swan River report. — swan_reportR","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/swan_reportR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create all of the plots and tables for the annual Swan River report. — swan_reportR","text":"","code":"if (FALSE) { # \\dontrun{ swan_reportR(inpath, outpath, surface = \"blue\", bottom = \"red\", chloro = \"darkgreen\")} # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/swan_surfR.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads in external data, combines with internal datasets and produces Swan River surfer plots — swan_surfR","title":"Reads in external data, combines with internal datasets and produces Swan River surfer plots — swan_surfR","text":"swan_surfR_alt takes file path Swan River sonde outputs creates     four panel (single column) surfer plot salinity, dissolved oxygen,     chlorophyll , temperature png format. function creates     directory called `plots/` file path store png's. Code expects     2 excel workbooks one monitoring run. Note sonde data EXO     models reads depth VPos metric. sonde models use     variant depth metric.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/swan_surfR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads in external data, combines with internal datasets and produces Swan River surfer plots — swan_surfR","text":"","code":"swan_surfR(path, ovit, ocav)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/swan_surfR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads in external data, combines with internal datasets and produces Swan River surfer plots — swan_surfR","text":"path Character string filepath location sonde data xlsx workbooks. ovit Character string (\"green\", \"blue\" \"red\") indicating oxygenation plant status site VIT. ocav Character string (\"green\", \"blue\" \"red\") indicating oxygenation plant status site CAV.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/swan_surfR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads in external data, combines with internal datasets and produces Swan River surfer plots — swan_surfR","text":"Two png four panel surfer plots Swan River. One shows    full extent monitoring run (river mouth just beyond    site POL - Upper Swan Power Lines). second shows Narrows    Bridge site POL. Saved directory called `plots/`.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/swan_surfR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reads in external data, combines with internal datasets and produces Swan River surfer plots — swan_surfR","text":"Surfer plots display     cross-section river metrics interest     interpolated sonde locations. Thin plate spline     used interpolation. river \"bottom\" displayed puts interpolation context.     river bottom derived combination historical     maximum depths sampling locations well station points extracted     \"best\" navigation line latest corporate bathymetry. See     project documentation details.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/swan_surfR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reads in external data, combines with internal datasets and produces Swan River surfer plots — swan_surfR","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/swan_surfR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads in external data, combines with internal datasets and produces Swan River surfer plots — swan_surfR","text":"","code":"if (FALSE) { # \\dontrun{ swan_surfR(path = \"Z:/DEC/MonitoringProgram/Data\", ovit = \"green\", ocav = \"red\") } # }"},{"path":"https://dbca-wa.github.io/rivRmon/reference/swan_WIN_report_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to read and format water quality data obtained from the WIR water portal for use in annual reporting for the Swan River — swan_WIN_report_data","title":"Function to read and format water quality data obtained from the WIR water portal for use in annual reporting for the Swan River — swan_WIN_report_data","text":"swan_WIN_report_data reads xlsx downloaded files WIR     based reporting year, formats data use generating     annual report.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/swan_WIN_report_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to read and format water quality data obtained from the WIR water portal for use in annual reporting for the Swan River — swan_WIN_report_data","text":"","code":"swan_WIN_report_data(inpath, reportingYear = 2019, outpath)"},{"path":"https://dbca-wa.github.io/rivRmon/reference/swan_WIN_report_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to read and format water quality data obtained from the WIR water portal for use in annual reporting for the Swan River — swan_WIN_report_data","text":"inpath character filepath downloaded data xlsx files. reportingYear 4 digit numerical representing current reporting year. outpath character filepath desired export location.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/swan_WIN_report_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to read and format water quality data obtained from the WIR water portal for use in annual reporting for the Swan River — swan_WIN_report_data","text":"csv export named SG-E-SWANEST_annual_report_data_for_YYYY.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/swan_WIN_report_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to read and format water quality data obtained from the WIR water portal for use in annual reporting for the Swan River — swan_WIN_report_data","text":"Original source data must downloaded     http://wir.water.wa.gov.au/Pages/Water-Information-Reporting.aspx     using keyword \"SG-E-SWANEST\" requesting \"Water Quality (discrete)     Site(s) cross-tabulated\". datasets read     reformatted ease use annual report.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/swan_WIN_report_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to read and format water quality data obtained from the WIR water portal for use in annual reporting for the Swan River — swan_WIN_report_data","text":"Bart Huntley, bart.huntley@dbca.wa.gov.au details see  https://dbca-wa.github.io/rivRmon/index.html rivRmon website","code":""},{"path":"https://dbca-wa.github.io/rivRmon/reference/swan_WIN_report_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to read and format water quality data obtained from the WIR water portal for use in annual reporting for the Swan River — swan_WIN_report_data","text":"","code":"if (FALSE) { # \\dontrun{ swan_WIN_report_data(inpath, reportYear = 2019, outpath)} # }"},{"path":[]},{"path":"https://dbca-wa.github.io/rivRmon/news/index.html","id":"minor-update-to-functions-3-0-0","dir":"Changelog","previous_headings":"","what":"Minor update to functions","title":"rivRmon 3.0.0","text":"replace swan_sufR_alt function removed. include minor adjustments legend titles legend bars improve aesthetics. site SAND now SANDBR plots expected called sonde data. centred axis labels added minor padding x axis avoid truncating labels. top bin colour scales now greater (‘>’) category accommodate temperatures exceed existing scale. response sites can now included data used extra data interpolation, appear plots water column labelled (due room limitations). include minor adjustments legend titles legend bars improve aesthetics. centred axis labels added minor padding x axis avoid truncating labels. top bin colour scales now greater (‘>’) category accommodate temperatures exceed existing scale. response sites can now included data used extra data interpolation, appear plots water column labelled.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/news/index.html","id":"update-to-internal-data-3-0-0","dir":"Changelog","previous_headings":"","what":"Update to internal data","title":"rivRmon 3.0.0","text":"create bathymetry profile newly updated origin shape files now contains site historical response sites. new data breaks labels incorporate changes surfer plot legends top bins now greater (‘>’) category.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/news/index.html","id":"a-new-function-3-0-0","dir":"Changelog","previous_headings":"","what":"A new function!","title":"rivRmon 3.0.0","text":"draws data edited excel workbook sheet sonde data files appended produces single surfer style plot metric data. user prompted code metric wish plot. plots intended ad-hoc/quick looks data.","code":""},{"path":[]},{"path":"https://dbca-wa.github.io/rivRmon/news/index.html","id":"minor-update-to-functions-2-0-2","dir":"Changelog","previous_headings":"","what":"Minor update to functions","title":"rivRmon 2.0.2","text":"incorporate new site, NIC-. remove plot aesthetics relating downgraded sampling sites (KENU300, BACD300, BACU300, GRE, MASD50, NICD200, MACD50). add plot aesthetics site KS7. remove PDF plot output. remove PDF plot output. add plot aesthetics /site KS7 used phytoplankton surveys.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/news/index.html","id":"update-to-internal-data-2-0-2","dir":"Changelog","previous_headings":"","what":"Update to internal data","title":"rivRmon 2.0.2","text":"create bathymetry profile newly updated origin shape files now contains site NIC-. add new fixed depths downgraded sampling sites (KENU300, BACD300, BACU300, GRE, MASD50, NICD200, MACD50).","code":""},{"path":[]},{"path":"https://dbca-wa.github.io/rivRmon/news/index.html","id":"minor-updates-to-functions-2-0-1","dir":"Changelog","previous_headings":"","what":"Minor updates to functions","title":"rivRmon 2.0.1","text":"incorporate new names sites BWR10 Mulberry Farm, SAND MULB respectively. function change multiple project names single one change lab. Outputs now named “river”. create bathymetry profile newly updated origin shape files. create applicable filters masking missing data.","code":""},{"path":[]},{"path":"https://dbca-wa.github.io/rivRmon/news/index.html","id":"updates-to-functions-2-0-0","dir":"Changelog","previous_headings":"","what":"Updates to functions","title":"rivRmon 2.0.0","text":"fix unwanted inclusion gaps plotted lines data points one week apart (.e. public holidays delayed sampling) output weekly seasonal statistics. names outputs stats sensible names. search data beginning least 6 digits. naming discrepancy original data output PEU RE archive data. ensures can use either source data. address new PEU data delivery format (GitHub #9, @Bartesto). focus sheet “Routine” name (seems unchangeable element raw data). “bacillariophyta” now included Diatom group. now take date file name rather reported inside workbook. addresses weird intermittent date format issues reading input data. export plots PNG format aid inclusion Microsoft products (GitHub#6, @Bartesto). can now include site “SHELL” needed. removed titles (titled within report headers). removed oxygen plant status legend (cramped small info appears report). ability add site “SHELL” needed Canning River plots. exports plots PNG format easier inclusion without resizing reports, removed margins made transparent. river bottom site locations now adjusts data (+ 20cm). updated colour ramps fix white “blob” issue (GitHub#4).","code":""},{"path":"https://dbca-wa.github.io/rivRmon/news/index.html","id":"new-functions-2-0-0","dir":"Changelog","previous_headings":"","what":"New functions","title":"rivRmon 2.0.0","text":"hab_groupR new function! reads PEU data summarises data according HAB reporting species outputs weekly summary CSV file. Also coded include site “SHELL” needed. hab_tablR new function! takes weekly summary HAB data creates conditionally formatted table PPTX output according HAB reportable triggers. lims_parsR new function! takes 3 interim weekly chlorophyll result workbooks supplied Chem Centre, summarises outputs CSV.","code":""},{"path":"https://dbca-wa.github.io/rivRmon/news/index.html","id":"rivrmon-110","dir":"Changelog","previous_headings":"","what":"rivRmon 1.1.0","title":"rivRmon 1.1.0","text":"oxy_wranglR function (GitHub #1, @Bartesto) added. previously stand alone function called oxy_kpi4. phyto_plotR restricted finding data 7 days prior user entered date subsetting data prior plot. Issue arose public holidays delay sampling run. Function now checks user entered date available data prior plot summary data selects closest preceding date available. (GitHub #2, @Bartesto).","code":""},{"path":"https://dbca-wa.github.io/rivRmon/news/index.html","id":"rivrmon-100","dir":"Changelog","previous_headings":"","what":"rivRmon 1.0.0","title":"rivRmon 1.0.0","text":"Initial release rivRmon. Functions two development packages amalgamated rivRmon (monitoR reportR) along 3 phyto functions. CKAN functions development. Please use .","code":""}]
